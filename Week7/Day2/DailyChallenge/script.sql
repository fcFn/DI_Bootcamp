-- Instructions
-- In this puzzle you have to go through all the SQL queries and provide us the output of the requests before executing them (ie. make an assumption).
-- Then, execute them to make sure you were correct.
-- Queries
-- CREATE TABLE FirstTab (
--      id integer, 
--      name VARCHAR(10)
-- )
-- INSERT INTO FirstTab VALUES
-- (5,'Pawan'),
-- (6,'Sharlee'),
-- (7,'Krish'),
-- (NULL,'Avtaar')
-- SELECT * FROM FirstTab
-- CREATE TABLE SecondTab (
--     id integer 
-- )
-- INSERT INTO SecondTab VALUES
-- (5),
-- (NULL)
-- SELECT * FROM SecondTab
-- DATA
-- Table1 – FirstTab
-- ID  Name
-- 5   Pawan
-- 6   Sharlee
-- 7   Krish
-- NULL    Avtaar
-- Table2 – SecondTab
-- ID
-- 5
-- NULL
-- Questions
-- Q1. What will be the OUTPUT of the following statement?
--     SELECT COUNT(*) 
--     FROM FirstTab AS ft WHERE ft.id NOT IN ( SELECT id FROM SecondTab WHERE id IS NULL )
-- Predicted: 3
-- Actual: 0
-- This is because the subquery returns NULL, and using IN or NOT IN with a list
-- that has a NULL will result in UNKNOWN, so the full condition becomes ft.id IS UNKNOWN 
-- which is always false.
-- Q2. What will be the OUTPUT of the following statement?
--     SELECT COUNT(*) 
--     FROM FirstTab AS ft WHERE ft.id NOT IN ( SELECT id FROM SecondTab WHERE id = 5 )
-- Predicted: 3
-- Actual: 2
-- This is also related to Q1: the null from FirstTab is not considered to be in the list that the subquery returns.
-- Q3. What will be the OUTPUT of the following statement?

--     SELECT COUNT(*) 
--     FROM FirstTab AS ft WHERE ft.id NOT IN ( SELECT id FROM SecondTab )
-- Predicted: 0
-- Actual: 0
-- Same as Q1 - any comparison with the list whether it's IN or NOT IN that contains NULL will result in UNKNOWN for
-- all the rows which means they're not counted as the condition becomes false.
-- Q4. What will be the OUTPUT of the following statement?

--     SELECT COUNT(*) 
--     FROM FirstTab AS ft WHERE ft.id NOT IN ( SELECT id FROM SecondTab WHERE id IS NOT NULL )
-- Predicted: 2
-- Actual: 2
-- Same because the NULL id from FirstTab is not considered to be or not be in the list that the subquery returns as
-- this is UNKNOWN, and we don't count 5 since it's in the list that the subquery returns.
